folders <-list.dirs(main_dir, full.names = TRUE, recursive = FALSE)
nimOutput <- list()
for(j in 1:length(folders)){
rdata_files <- list.files(folders[j], pattern = "\\.RData$", full.names = TRUE)
if(length(rdata_files) == 0) next
new_dir <- folders[j]
nimOutput_temp <- collectMCMCbites(new_dir, burnin = 1)
saveRDS(nimOutput_temp, file = paste0('./Combined/', substr(new_dir, nchar(new_dir)-8, nchar(new_dir)), '.rds'))
}
newfold <- "~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/Combined"
folders2 <- list.files(newfold, full.names = TRUE, recursive = FALSE)#[c(1,3,6)]
#
# # Initialize a list to store combined data frames
combined_data <- list()
# Iterate over each file
for (folder in folders2) {
mcmcSamples <- readRDS(folder)
folder_data <- mcmcSamples
folder_name <- basename(folder)
combined_data[[folder_name]] <- as.mcmc(folder_data)
}
mcpars <- array(NA, c(length(combined_data),3))
for(j in 1:length(combined_data)){
mcpars[j,] <- attr(combined_data[[j]], 'mcpar')
}
for(j in 1:length(combined_data)){
combined_data[[j]] <- window(combined_data[[j]], end = min(mcpars[,2]))
}
nimOutput <- as.mcmc.list(combined_data)
stuff <- readRDS('big_input5.rds')
prevs <- paste0('prev_q[', 1:105, ', ', rep(1:4, each = 105), ']')
MCMCvis::MCMCtrace(nimOutput, pdf =F, ISB = F, params = paste0('n_post[12, 1, ', 1:105, ']'), Rhat = T, n.eff = T)
MCMCvis::MCMCtrace(nimOutput, pdf = F, params = 'phi', exact = F)
MCMCvis::MCMCtrace(nimOutput, params = 'beta0', exact = F, pdf = F, Rhat = T, n.eff = T)
MCMCvis::MCMCtrace(nimOutput, params = 'beta1', exact = F, pdf = F, Rhat = T, n.eff = T)
MCMCvis::MCMCtrace(nimOutput, params = 'beta2', exact = F, pdf = F, Rhat = T, n.eff = T)
library(terra)
setwd("~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/Simulation_Scripts/CWD")
base <- rast('AR_DEM_4Kres.tif')
base1 <- base2 <- base3 <- base4 <-base
Ns <- MCMCvis::MCMCsummary(nimOutput, params = "N")
n_post <- MCMCvis::MCMCsummary(nimOutput, params = 'n_post')
# lam <- MCMCvis::MCMCsummary(nimOutput, params = 'lambda')
# surv_prms <- paste0('survivors[',c(2,3,5,6,8,9,11,12),', ', rep(rep(2:4, each = 8), 105), ', ', rep(1:105, each = 8*4),   ']')
# survs <- MCMCvis::MCMCsummary(nimOutput, params = surv_prms, exact = T, ISB = F)
ggN <- data.frame(pix = rep(1:105, 4),
time = rep(1:4, each = 105),
N = Ns$`50%`,
LCI = Ns$`2.5%`,
UCI = Ns$`97.5%`,
x = as.data.frame(base, xy= T)$x,
y = as.data.frame(base, xy= T)$y)
gg_npost <- data.frame(pix = rep(1:105, each = 4*12),
time = rep(rep(1:4, each = 12), 105),
stage = rep(rep(1:12, 4), 105),
N = n_post$`50%`,
LCI = n_post$`2.5%`,
UCI = n_post$`97.5%`,
x = as.data.frame(base, xy= T)$x,
y = as.data.frame(base, xy= T)$y)
setwd("~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod")
# head(lam)
# tail(survs)
# head(survs)
# tail(n_post, n = 12)
# MCMCvis::MCMCtrace(nimOutput, params = sample(surv_prms, 50), pdf = F, Rhat = T, n.eff = T, ISB = F)
#ggN <- subset(ggN, ggN$UCI < 1000)
ggplot(ggN, aes(x = time, y = N, group = pix))+
geom_line()+
geom_pointrange(aes(ymin = LCI, ymax = UCI))+
ggtitle('Total Abundance')+
theme_bw()
ggplot(ggN, aes(x =x, y = y, fill = N))+
geom_raster()+
facet_wrap(~time)+
ggtitle('Total Abundance')+
theme_bw()
ggplot(ggN %>% group_by(time) %>% summarize(Mean_N = sum(N), LowN = sum(LCI), HighN = sum(UCI)), aes(x = time, y = Mean_N)) +
geom_line()+
#geom_pointrange(aes(ymin = LowN, ymax = HighN))+
ggtitle('Total Abundance')+
theme_bw()
ggplot(gg_npost[gg_npost$stage == 1,], aes(x =x, y = y, fill = N))+
geom_raster()+
facet_wrap(~time)+
ggtitle('Fawns')+
theme_bw()
ggplot(gg_npost[gg_npost$stage == 3,], aes(x =x, y = y, fill = N))+
geom_raster()+
facet_wrap(~time)+
ggtitle('Neg Adult Females')+
theme_bw()
ggplot(gg_npost[gg_npost$stage == 6,], aes(x =x, y = y, fill = N))+
geom_raster()+
facet_wrap(~time)+
ggtitle('Pos Adult Females')+
theme_bw()
ggplot(gg_npost[gg_npost$stage == 1,], aes(x =time, y = N, col = pix, group = pix))+
geom_line()+
ggtitle('Fawns')+
theme_bw()
ggplot(gg_npost, aes(x =time, y = N, col = pix, group = pix))+
geom_line()+
ggtitle('All Stages All Pixels')+
theme_bw()+
facet_wrap(~stage)
setwd("~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/deerShed_StrangeY2/deerExpectedVals")
#main_dir <- "~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/deerShed_StrangeY2"
main_dir <- "~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/deerShed_StrangeY2/deerExpectedVals"
folders <-list.dirs(main_dir, full.names = TRUE, recursive = FALSE)
source("~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/runMCMCbites.R")
#main_dir <- "~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/deerShed_StrangeY2"
main_dir <- "~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/deerShed_StrangeY2/deerExpectedVals"
folders <-list.dirs(main_dir, full.names = TRUE, recursive = FALSE)
nimOutput <- list()
for(j in 1:length(folders)){
rdata_files <- list.files(folders[j], pattern = "\\.RData$", full.names = TRUE)
if(length(rdata_files) == 0) next
new_dir <- folders[j]
nimOutput_temp <- collectMCMCbites(new_dir, burnin = 1)
saveRDS(nimOutput_temp, file = paste0('./Combined/', substr(new_dir, nchar(new_dir)-8, nchar(new_dir)), '.rds'))
}
newfold <- "~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/Combined"
folders2 <- list.files(newfold, full.names = TRUE, recursive = FALSE)#[c(1,3,6)]
#
# # Initialize a list to store combined data frames
combined_data <- list()
# Iterate over each file
for (folder in folders2) {
mcmcSamples <- readRDS(folder)
folder_data <- mcmcSamples
folder_name <- basename(folder)
combined_data[[folder_name]] <- as.mcmc(folder_data)
}
mcpars <- array(NA, c(length(combined_data),3))
for(j in 1:length(combined_data)){
mcpars[j,] <- attr(combined_data[[j]], 'mcpar')
}
for(j in 1:length(combined_data)){
combined_data[[j]] <- window(combined_data[[j]], end = min(mcpars[,2]))
}
nimOutput <- as.mcmc.list(combined_data)
library(MCMCvis)
infect <- MCMCsummary(nimOutput, 'p_infect', exact = F)
ggcwd <- data.frame(x = as.data.frame(base1, xy = T)$x,
y = as.data.frame(base1, xy = T)$y,
infect = infect$mean,
LCI = infect$`2.5%`,
UCI = infect$`97.5%`)
# cwd = c(only_pix_m[(1:105)+(105*0),3],
#         only_pix_m[(1:105)+(105*1),3],
#         only_pix_m[(1:105)+(105*2),3],
#         only_pix_m[(1:105)+(105*3),3]),
#time = rep(1:4, each = 105))
library(ggplot2)
ggplot(ggcwd, aes(x=x, y=y, fill= infect))+
geom_raster()+
scale_fill_viridis_c(option = "C")
infect
library(MCMCvis)
infect <- MCMCsummary(nimOutput, 'p_infect', exact = F)
ggcwd <- data.frame(x = as.data.frame(base1, xy = T)$x,
y = as.data.frame(base1, xy = T)$y,
infect = infect$mean,
LCI = infect$`2.5%`,
UCI = infect$`97.5%`)
# cwd = c(only_pix_m[(1:105)+(105*0),3],
#         only_pix_m[(1:105)+(105*1),3],
#         only_pix_m[(1:105)+(105*2),3],
#         only_pix_m[(1:105)+(105*3),3]),
#time = rep(1:4, each = 105))
library(ggplot2)
ggplot(ggcwd, aes(x=x, y=y, fill= infect))+
geom_raster()+
scale_fill_viridis_c(option = "C")
base1 <- base2 <- base3 <- base4 <-base
#eta1 <- MCMCvis::MCMCsummary(nimOutput, 'eta1', exact = T)
#e1 <- eta1$mean
eta2 <- summary(nimOutput[, 'eta2', ])$quantiles
#eta3 <- MCMCvis::MCMCsummary(nimOutput, 'eta3', exact = F)
#infec <- function(q, y){plogis(eta2[q]*y + e1)}
infec <- function(q,y,m = 0){.33*(1-exp(-(eta2[q]*y +.01)))}
par(mfrow= c(1,1))
max <- 400
plot(function(y){infec(3, y)}, from = 0, to = max, ylab = 'p(infection)', xlab = 'Infected Deer in Pixel', ylim = c(0, 1))
plot(function(y){infec(1, y)}, from = 0, to = max, lty = 2, add = T)
plot(function(y){infec(5, y)}, from = 0, to = max, lty = 2, add = T)
plot(function(y){infec(3, y)}, from = 0, to = max, ylab = 'p(infection)', xlab = 'Infected Deer in Pixel', ylim = c(0, .4))
base1 <- base2 <- base3 <- base4 <-base
#eta1 <- MCMCvis::MCMCsummary(nimOutput, 'eta1', exact = T)
#e1 <- eta1$mean
eta2 <- summary(nimOutput[, 'eta2', ])$quantiles
#eta3 <- MCMCvis::MCMCsummary(nimOutput, 'eta3', exact = F)
#infec <- function(q, y){plogis(eta2[q]*y + e1)}
infec <- function(q,y,m = 0){.33*(1-exp(-(eta2[q]*y +.01)))}
par(mfrow= c(1,1))
max <- 400
plot(function(y){infec(3, y)}, from = 0, to = max, ylab = 'p(infection)', xlab = 'Infected Deer in Pixel', ylim = c(0, .4))
plot(function(y){infec(1, y)}, from = 0, to = max, lty = 2, add = T)
plot(function(y){infec(5, y)}, from = 0, to = max, lty = 2, add = T)
base1 <- base2 <- base3 <- base4 <-base
#eta1 <- MCMCvis::MCMCsummary(nimOutput, 'eta1', exact = T)
#e1 <- eta1$mean
eta2 <- summary(nimOutput[, 'eta2', ])$quantiles
#eta3 <- MCMCvis::MCMCsummary(nimOutput, 'eta3', exact = F)
#infec <- function(q, y){plogis(eta2[q]*y + e1)}
infec <- function(q,y,m = 0){.33*(1-exp(-(eta2[q]*y +.01)))}
par(mfrow= c(1,1))
max <- 100
plot(function(y){infec(3, y)}, from = 0, to = max, ylab = 'p(infection)', xlab = 'Infected Deer in Pixel', ylim = c(0, .4))
plot(function(y){infec(1, y)}, from = 0, to = max, lty = 2, add = T)
plot(function(y){infec(5, y)}, from = 0, to = max, lty = 2, add = T)
prev = MCMCsummary(nimOutput, 'prev_q', exact = F)
ggcwd2 <- data.frame(x = as.data.frame(base1, xy = T)$x,
y = as.data.frame(base1, xy = T)$y,
prev = prev$`50%`,
LCI = prev$`2.5%`,
UCI = prev$`97.5%`,
time = rep(1:4, each = 105))
ggplot(ggcwd2, aes(x=x, y=y, fill= prev))+
geom_raster()+
scale_fill_viridis_c(option = "B", alpha = .85)+
facet_wrap(~time)+
ggtitle("Median")
ggplot(ggcwd2, aes(x=x, y=y, fill= LCI))+
geom_raster()+
scale_fill_viridis_c(option = "B", alpha = .85)+
facet_wrap(~time)+
ggtitle("LCI")
ggplot(ggcwd2, aes(x=x, y=y, fill= UCI))+
geom_raster()+
scale_fill_viridis_c(option = "B", alpha = .85)+
facet_wrap(~time)+
ggtitle("UCI")
source("~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/runMCMCbites.R")
main_dir <- "~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/deerShed_StrangeY2"
#main_dir <- "~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/deerShed_StrangeY2/deerExpectedVals"
folders <-list.dirs(main_dir, full.names = TRUE, recursive = FALSE)
nimOutput <- list()
for(j in 1:length(folders)){
rdata_files <- list.files(folders[j], pattern = "\\.RData$", full.names = TRUE)
if(length(rdata_files) == 0) next
new_dir <- folders[j]
nimOutput_temp <- collectMCMCbites(new_dir, burnin = 1)
saveRDS(nimOutput_temp, file = paste0('./Combined/', substr(new_dir, nchar(new_dir)-8, nchar(new_dir)), '.rds'))
}
newfold <- "~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/Combined"
folders2 <- list.files(newfold, full.names = TRUE, recursive = FALSE)#[c(1,3,6)]
#
# # Initialize a list to store combined data frames
combined_data <- list()
# Iterate over each file
for (folder in folders2) {
mcmcSamples <- readRDS(folder)
folder_data <- mcmcSamples
folder_name <- basename(folder)
combined_data[[folder_name]] <- as.mcmc(folder_data)
}
mcpars <- array(NA, c(length(combined_data),3))
for(j in 1:length(combined_data)){
mcpars[j,] <- attr(combined_data[[j]], 'mcpar')
}
for(j in 1:length(combined_data)){
combined_data[[j]] <- window(combined_data[[j]], end = min(mcpars[,2]))
}
nimOutput <- as.mcmc.list(combined_data)
stuff <- readRDS('big_input5.rds')
prevs <- paste0('prev_q[', 1:105, ', ', rep(1:4, each = 105), ']')
MCMCvis::MCMCtrace(nimOutput, pdf =F, ISB = F, params = paste0('n_post[12, 1, ', 1:105, ']'), Rhat = T, n.eff = T)
MCMCvis::MCMCtrace(nimOutput, pdf = F, params = 'phi', exact = F)
f <- which(!is.na(stuff$inits[[1]]$knownstate), arr.ind = T)
f2 <- which(!is.na(stuff$inits[[1]]$known_pix), arr.ind = T)
me <- me2 <- array(NA)
for(m in 1:nrow(f)){
me[m] <- paste0('knownstate[', f[m,1], ', ', f[m,2], ']')
}
for(m in 1:nrow(f2)){
me2[m] <- paste0('known_pix[', f2[m,1], ', ', f2[m,2], ']')
}
nps <- paste0('n_post[', c(1:3,5:6, 7:9, 11:12), ', ', rep(1:4, each = 105*10), ', ', rep(1:105, each = 10*4), ']')
s_mon <- paste0('survivors[', c(2:3,5:6, 8:9, 11:12), ', ', rep(2:4, each = 105*8), ', ', rep(1:105, each = 8*3), ']')
prevs <- paste0('prev_q[', 1:105, ', ', rep(1:4, each = 105), ']')
params <- c('beta0', 'beta1', 'beta2', 'p0', 'p1',
'eta2',  paste0('phi0[', c(1:3, 5:6, 8:9, 11:12), ']'),
nps, me, me2, s_mon, prevs)
MCMCvis::MCMCtrace(nimOutput, params = params, ISB = F, Rhat = T, n.eff = T, filename = 'AllData')
knitr::opts_chunk$set(echo = TRUE)
library(coda)
library(gtools)
library(ggplot2)
library(terra)
library(tidyterra)
#### Grab Output ####
occs <- paste0(rep(c('Spring ', 'Fall '), 11), rep(2014:2024, each =2))
main_dir <- "~/Desktop/U_Georgia/Texas_Tortoise/Mar2025/torts3"
source("~/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/BigMod/runMCMCbites.R")
newfold <- "~/Desktop/U_Georgia/Texas_Tortoise/Mar2025/Combined"
do.call(file.remove, list(list.files(newfold, full.names = T)))
folders <-list.dirs(main_dir, full.names = TRUE, recursive = FALSE)
nimOutput <- list()
for(j in 1:length(folders)){
rdata_files <- list.files(folders[j], pattern = "\\.RData$", full.names = TRUE)
if(length(rdata_files) == 0) next
new_dir <- folders[j]
nimOutput_temp <- collectMCMCbites(new_dir, burnin = 2, progress.bar = F)
saveRDS(nimOutput_temp, file = paste0('./Combined/', substr(new_dir, nchar(new_dir)-8, nchar(new_dir)), '.rds'))
}
folders2 <- list.files(newfold, full.names = TRUE, recursive = FALSE)#[c(1,3,6)]
#
# # Initialize a list to store combined data frames
combined_data <- list()
# Iterate over each file
for (folder in folders2) {
mcmcSamples <- readRDS(folder)
folder_data <- mcmcSamples
folder_name <- basename(folder)
combined_data[[folder_name]] <- as.mcmc(folder_data)
}
mcpars <- array(NA, c(length(combined_data),3))
for(j in 1:length(combined_data)){
mcpars[j,] <- attr(combined_data[[j]], 'mcpar')
}
for(j in 1:length(combined_data)){
combined_data[[j]] <- window(combined_data[[j]], end = min(mcpars[,2]))
}
nimOutput <- as.mcmc.list(combined_data)
params <- c('p.int', 'p.toy', 'gamma','gammaPrime', 'beta0', 'beta1', 'sigma_move', 'phi', 'dens', 'N', 'psi', 'gammaPrime', 'beta2', 'p.evi', 'Recruits')
MCMCvis::MCMCtrace(nimOutput, params = params[c(1:2,5:8,11,13,14)], pdf = F, n.eff = T, Rhat = T, exact = F)
stuff <- readRDS('tort_stuff2.RDS')
consts <- stuff$consts
dat <- stuff$dat
inits <- stuff$inits
mydens <- paste0('dens[', 1:consts$numHabWindows, ', ', rep(1:22, each = consts$numHabWindows), ']')
mee <- MCMCvis::MCMCsummary(nimOutput, params = mydens, exact = T, ISB = F)
mee$Time <- rep(1:22, each = consts$numHabWindows)
N_median <- MCMCvis::MCMCsummary(nimOutput, params = 'N')
gg_Ns <- data.frame(Median = round(c(N_median$`50%`)),
LCI = c(N_median$`2.5%`),
UCI = c(N_median$`97.5%`),
Time = 1:22)
ggplot(gg_Ns, aes(x = Time, y= Median))+
geom_line()+
geom_point()+
geom_ribbon(aes(ymin = LCI, ymax = UCI), fill = 'blue', alpha = .1, lty = 2, col = 'black')+
geom_label(aes(label = Median), size = 3)+
theme_bw()+
scale_x_continuous(breaks = seq(1, 22, by = 2), labels = occs[rep(c(T,F), 11)])+
theme(axis.text.x = element_text(angle = 45, hjust= 1), axis.text= element_text(size = 15),
axis.title = element_text(size = 20))+
ggtitle('Total Abundance')
setwd("~/Desktop/U_Georgia/Texas_Tortoise/tortSampleAreas201808")
border <- vect('tortSampleAreas201808.shp')
setwd("~/Desktop/U_Georgia/Texas_Tortoise/Mar2025")
habitat <- rast('tortoise_hab.tif')
bonus <- vect('bonus_tort_mods_Merge1.shp')
bonus <- crop(bonus, ext(habitat))
edges <- rbind(bonus, border)
smallpixes <- rast(crs= crs(habitat), res = 50, extent = ext(habitat))
myext <- ext(habitat)[1:2]
for(t in 1:22){
mydens <- subset(mee, mee$Time == t)
myhab <- habitat
myhab[!is.na(myhab)]  <- mydens$`50%`[(1:consts$numHabWindows)]
#bad practice but looks nice:
myhab2 <- resample(myhab, smallpixes)
myhab3 <- mask(myhab2, edges)
print(ggplot()+
geom_spatraster(data = myhab3, aes(fill = last))+
geom_spatvector(data = edges, fill = NA, col = 'black')+
coord_sf(crs = 26914)+
xlim(myext)+
theme_void()+
scale_fill_viridis_c(na.value = 'white', limit = c(.05, 14), option = 'F')+
ggtitle(occs[t])
)
}
t <- 1
t2 <- 22
mydens <- subset(mee, mee$Time == t)
mydens2 <- subset(mee, mee$Time == t2)
myhab <- habitat
myhab[!is.na(myhab)]  <- mydens2$`50%`[(1:consts$numHabWindows)] - mydens$`50%`[(1:consts$numHabWindows)]
#bad practice but looks nice:
myhab2 <- resample(myhab, smallpixes)
myhab3 <- mask(myhab2, edges)
ggplot()+
geom_spatraster(data = myhab3, aes(fill = last))+
geom_spatvector(data = edges, fill = NA, col = 'black')+
coord_sf(crs = 26914)+
xlim(myext)+
theme_void()+
scale_fill_gradient2(na.value = 'white', limit = c(-5, 2))+
ggtitle('Overall Change')
range(myhab3)
plot(myhab3)
ggplot()+
geom_spatraster(data = myhab3, aes(fill = last))+
geom_spatvector(data = edges, fill = NA, col = 'black')+
coord_sf(crs = 26914)+
xlim(myext)+
theme_void()+
scale_fill_gradient2(na.value = 'white', limit = c(-5.5, 2.5))+
ggtitle('Overall Change')
t <- 1
t2 <- 22
mydens <- subset(mee, mee$Time == t)
mydens2 <- subset(mee, mee$Time == t2)
myhab <- habitat
myhab[!is.na(myhab)]  <- mydens2$`50%`[(1:consts$numHabWindows)] - mydens$`50%`[(1:consts$numHabWindows)]
#bad practice but looks nice:
myhab2 <- resample(myhab, smallpixes)
myhab3 <- mask(myhab2, edges)
ggplot()+
geom_spatraster(data = myhab3, aes(fill = last))+
geom_spatvector(data = edges, fill = NA, col = 'black')+
coord_sf(crs = 26914)+
xlim(myext)+
theme_void()+
scale_fill_gradient2(na.value = 'white', limit = c(-5.5, 2.5))+
ggtitle('Overall Change')
South <- c(64,65,67,68)
VC <- c(62,61,60,59,58)
Main <- c(57,56,55,54)
Pipe <- c(45:46, 50:49)
CE <- c(1,4,5)
NE <- c(6,7,13,14)
Nil <- c(11,12)
totals <- unique(c(South, VC, Main, Pipe, CE, NE, Nil))
So <- V <- M <- pip <- ce <- ne <- ni <- tot <- array(NA, c(22,3))
mydens <- paste0('dens[', 1:consts$numHabWindows, ', ', rep(1:22, each = consts$numHabWindows), ']')
ds <- as.matrix(nimOutput[,mydens,])
for(t in 1:22){
these <- paste0('dens[', 1:consts$numHabWindows, ', ', t, ']')
mees <- ds[,these]
So[t, ] <- quantile(rowSums(mees[,South]), c(0.025, .5, .975))
V[t, ] <- quantile(rowSums(mees[,VC]), c(0.025, .5, .975))
M[t, ] <- quantile(rowSums(mees[,Main]), c(0.025, .5, .975))
pip[t, ] <- quantile(rowSums(mees[,Pipe]), c(0.025, .5, .975))
ce[t, ] <- quantile(rowSums(mees[,CE]), c(0.025, .5, .975))
ne[t, ] <- quantile(rowSums(mees[,NE]), c(0.025, .5, .975))
ni[t, ] <- quantile(rowSums(mees[,Nil]), c(0.025, .5, .975))
tot[t, ] <- quantile(rowSums(mees[,totals]), c(0.025, .5, .975))
}
gg_sites <- data.frame(Median = c(So[,2], V[,2], M[,2], pip[,2], ce[,2], ne[,2], ni[,2], tot[,2]),
UCI = c(So[,3], V[,3], M[,3], pip[,3], ce[,3], ne[,3], ni[,3], tot[,3]),
LCI = c(So[,1], V[,1], M[,1], pip[,1], ce[,1], ne[,1], ni[,1], tot[,1]),
Site = rep(c('Southside', 'Visitor Center', 'Maintenance', 'Pipeline', 'Crescent E', 'Northeast', 'Nilgai', 'All Main Lomas'), each= 22),
Time = 1:22
)
ggplot(gg_sites, aes(x = Time, y= Median))+
geom_line()+
geom_ribbon(aes(ymin = LCI, ymax = UCI), fill = 'blue', alpha = .1, lty = 2, col = 'black')+
#geom_label(aes(label = Median), size = 3)+
theme_bw()+
scale_x_continuous(breaks = seq(1, 22, by = 2), labels = occs[rep(c(T,F), 11)])+
theme(axis.text.x = element_text(angle = 45, hjust= 1))+
facet_wrap(~Site, scales = 'free_y')
phis <- MCMCvis::MCMCsummary(nimOutput, params = 'phi', exact = F)
phis[3:5]^2
gammaP <- MCMCvis::MCMCsummary(nimOutput, params = 'Recruits', exact = F)
gamma_df <- data.frame(gammaP = c(gammaP$`50%`)*-1,
LCI = c(gammaP$`2.5%`)*-1,
UCI = c(gammaP$`97.5%`)*-1,
Time = 0:21)
ggplot(gamma_df, aes(x = Time, y = gammaP))+
geom_pointrange(aes(ymin = LCI, ymax = UCI))+
theme_bw()+
xlim(.1,22.4)+
ylab('Apparent Recruitment')
sigs <- MCMCvis::MCMCsummary(nimOutput, params = 'sigma', exact = F)
sigs[1,3:5]*res(habitat)[1]
#p.int + p.toy[toy[t]] + p.evi*evi[1:n.traps,t]
ptemp <- as.matrix(nimOutput[,c('p.int', 'p.toy[1]', 'p.toy[2]', 'p.evi')])
evi.mean <- 3348.604
evi.sd <- 421.9987
seq_evi <- seq(min(consts$evi), max(consts$evi), by = .1)
evi_norm <- seq_evi*evi.sd+evi.mean
p_out <- array(NA, c(nrow(ptemp), length(seq_evi), 2)) #2 seasons
for(j in 1:nrow(ptemp)){
for(k in 1:2){
p_out[j,,k] <- plogis(ptemp[j,1]+ptemp[j,2+(k-1)]+ptemp[j,4]*seq_evi)
}
}
ps_out <- apply(p_out, MARGIN = c(2,3), FUN=function(x){quantile(x, c(.025, .5, .975))})
gg_ps <- data.frame(Median = c(ps_out[2,,1], ps_out[2,,2]),
LCI = c(ps_out[1,,1], ps_out[1,,2]),
UCI = c(ps_out[3,,1], ps_out[3,,2]),
Season = rep(c('Fall','Spring'), each = length(seq_evi)),
EVI = evi_norm)
ggplot(gg_ps, aes(x = EVI, y = Median, group = Season, col = Season))+
geom_ribbon(aes(ymin = LCI, ymax = UCI, fill = Season), alpha = .5)+
geom_line()+
theme_bw()+
ylab("Detection Probability")+
xlab("EVI Value")+
scale_fill_manual(values = c("steelblue2","olivedrab4"))+
scale_color_manual(values = c("steelblue2","olivedrab4"))
gg_Ns
ggplot(gg_Ns, aes(x = Time, y= Median))+
geom_line()+
geom_point()+
geom_ribbon(aes(ymin = LCI, ymax = UCI), fill = 'blue', alpha = .1, lty = 2, col = 'black')+
geom_label(aes(label = Median), size = 3)+
theme_bw()+
scale_x_continuous(breaks = seq(1, 22, by = 2), labels = occs[rep(c(T,F), 11)])+
theme(axis.text.x = element_text(angle = 45, hjust= 1), axis.text= element_text(size = 15),
axis.title = element_text(size = 20))+
ggtitle('Total Abundance')
setwd("/Users/heather/Desktop/U_Georgia/Chandler_Meetings/heather/CWD_Postdoc/Simulation_Scripts/CWD/shiny-electron-template-m1-2023/shiny")
shiny::runApp()
ls
getwd()
